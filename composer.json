{
    "name": "dimadeush/docker-symfony-api",
    "type": "project",
    "description": "JSON REST API",
    "keywords": [
        "Docker",
        "Nginx",
        "Php",
        "Symfony",
        "API",
        "Supervisord",
        "MySQL",
        "RabbitMQ"
    ],
    "homepage": "https://github.com/dimadeush/docker-symfony-api",
    "version": "1.0.0",
    "license": "proprietary",
    "authors": [
        {
            "name": "Dmitriy Kravtsov",
            "email": "dimitriy_k@ukr.net",
            "homepage": "https://github.com/dimadeush",
            "role": "Developer"
        }
    ],
    "require": {
        "php": "^7.4.0",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "ext-json": "*",
        "ext-mbstring": "*",
        "ext-pdo": "*",
        "ext-pdo_mysql": "*",
        "ext-amqp": "*",
        "antishov/doctrine-extensions-bundle": "^1.4",
        "beberlei/doctrineextensions": "^1.2",
        "doctrine/doctrine-migrations-bundle": "^2.1",
        "easycorp/easy-log-handler": "1.0.*",
        "jmose/command-scheduler-bundle": "^2.2",
        "lexik/jwt-authentication-bundle": "^2.6",
        "mark-gerarts/automapper-plus-bundle": "^1.3",
        "matthiasnoback/symfony-console-form": "^3.6",
        "nelmio/api-doc-bundle": "^3.6",
        "nelmio/cors-bundle": "^2.0",
        "piwik/device-detector": "^3.12",
        "ramsey/uuid-doctrine": "^1.6",
        "sensio/framework-extra-bundle": "^5.5",
        "sensiolabs/security-checker": "^6.0",
        "symfony/asset": "4.4.*",
        "symfony/config": "4.4.*",
        "symfony/console": "4.4.*",
        "symfony/dotenv": "4.4.*",
        "symfony/expression-language": "4.4.*",
        "symfony/flex": "^1.6",
        "symfony/form": "4.4.*",
        "symfony/framework-bundle": "4.4.*",
        "symfony/http-client": "4.4.*",
        "symfony/intl": "4.4.*",
        "symfony/mailer": "4.4.*",
        "symfony/messenger": "4.4.*",
        "symfony/monolog-bundle": "^3.5",
        "symfony/orm-pack": "*",
        "symfony/process": "4.4.*",
        "symfony/routing": "4.4.*",
        "symfony/security-bundle": "4.4.*",
        "symfony/serializer-pack": "*",
        "symfony/translation": "4.4.*",
        "symfony/twig-bundle": "4.4.*",
        "symfony/validator": "4.4.*",
        "symfony/web-link": "4.4.*",
        "symfony/yaml": "4.4.*"
    },
    "replace": {
        "paragonie/random_compat": "2.*",
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php56": "*",
        "symfony/polyfill-php70": "*",
        "symfony/polyfill-php71": "*",
        "symfony/polyfill-php72": "*"
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.4",
        "doctrine/doctrine-fixtures-bundle": "^3.3",
        "ergebnis/composer-normalize": "^2.3",
        "roave/security-advisories": "dev-master",
        "symfony/debug-pack": "*",
        "symfony/maker-bundle": "^1.17",
        "symfony/requirements-checker": "^1.1"
    },
    "config": {
        "platform": {
            "php": "7.4.0"
        },
        "preferred-install": {
            "*": "dist"
        },
        "sort-packages": true
    },
    "extra": {
        "bamarni-bin": {
            "target-directory": "tools"
        },
        "symfony": {
            "allow-contrib": true,
            "require": "4.4.*"
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/",
            "PHPUnit\\": "tools/01_phpunit/vendor/phpunit/phpunit/src/",
            "Symfony\\Component\\BrowserKit\\": "tools/01_phpunit/vendor/symfony/browser-kit",
            "Symfony\\Bridge\\PhpUnit\\": "tools/01_phpunit/vendor/symfony/phpunit-bridge"
        }
    },
    "prefer-stable": true,
    "scripts": {
        "post-install-cmd": [
            "if test -d vendor/symfony/requirements-checker; then ./vendor/bin/requirements-checker; fi",
            "if test -d vendor/bamarni/composer-bin-plugin; then composer bin all install; fi",
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "if test -d vendor/symfony/requirements-checker; then ./vendor/bin/requirements-checker; fi",
            "if test -d vendor/bamarni/composer-bin-plugin; then composer bin all update; fi",
            "@auto-scripts"
        ],
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "cache:warmup": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd",
            "security-checker security:check": "script"
        }
    },
    "support": {
        "issues": "https://github.com/dimadeush/docker-symfony-api/issues"
    }
}
